#include <bits/stdc++.h>
using namespace std;


int partition (int arr[], int low, int high) // function gtnel vortexa ynknum pivoti dirqy,kataruma mi cicle
{
	int pivot = arr[high]; // pivot
	int i = (low - 1); // Index of smaller element 

	for (int j = low; j <= high - 1; j++)
	{
		if (arr[j] < pivot) // If current element < the pivot
		{
			i++; 
			swap(arr[i], arr[j]);
		}
	}
	swap(arr[i + 1], arr[high]);
	return (i + 1);
}


void quickSort(int arr[], int low, int high) //arr[]  Array - sortavorvum,low - Starting index
{
	if (low < high)
	{
		int pi = partition(arr, low, high); 	// pi is partitioning index

		quickSort(arr, low, pi - 1); 	// partition and after partition
		quickSort(arr, pi + 1, high);
	}
}


void printArray(int arr[], int size) 
{
	int i;
	for (i = 0; i < size; i++)
		cout << arr[i] << " ";
	cout << endl;
}


int main()
{
	int arr[] = {10, 7, 8, 9, 1, 5};
	int n = sizeof(arr) / sizeof(arr[0]);
	quickSort(arr, 0, n - 1);
	cout << "Sorted array: \n";
	printArray(arr, n);
	return 0;
}
